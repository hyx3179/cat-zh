WMapTile=React.createClass({getInitialState:function(){return{isFocused:!1}},getDefaultProperties:function(){return{x:0,y:0,data:{level:0,cp:0},onMouseDown:null,onMouseUp:null,scale:0,isSelected:!1,isActive:!1}},render:function(){var a=this.props.data||{level:0,cp:0},b=game.village.map.toLevel(this.props.x,this.props.y),c=a.cp/b*100,e="";this.state.isFocused&&(e+=" focused");this.props.isSelected&&(e+=" selected");this.props.isActive&&(e+=" active");a.unlocked||(e+=" locked");var d=1-this.props.scale/
2;return $r("div",{className:"map-cell"+e,onClick:this.onClick,onMouseOver:this.onMouseOver,onMouseOut:this.onMouseOut,style:{backgroundColor:"rgb(255,"+(200-20*a.level)+",50, 0.6)",width:35*d+"px",height:35*d+"px"}},$r("span",{className:"coord"},this.state.isFocused?"["+this.props.x+","+this.props.y+"]":"..."),a&&$r("div",{className:"label"},a.title),a.cp?$r("progress",{value:c,max:100}):null,this.state.isFocused&&$r("div",{className:"tooltip-content"},[a?$r("div",{className:"label"},[a.type&&$r("div",
null,"Terrain:"+a.type),$r("div",null,"lv."+a.level+" ["+a.cp.toFixed()+"/"+b.toFixed()+"cp]("+c.toFixed()+"%)")]):$r("div",{className:"label"},"Nothing interesting here")]))},onClick:function(a){this.props.onClick(a,this.props.x,this.props.y)},onMouseOver:function(){this.setState({isFocused:!0});this.props.onFocus(this.props.x,this.props.y)},onMouseOut:function(){this.setState({isFocused:!1});this.props.onBlur(this.props.x,this.props.y)}});
WMapViewport=React.createClass({getDefaultProperties:function(){return{dataset:{},exploredLevel:0}},getInitialState:function(){return{dataset:this.props.dataset,focusedNode:null,selectedNode:game.village.map.selectedNode,expeditionNode:game.village.map.expeditionNode}},render:function(){var a=this.props.exploredLevel,b=0;10<a&&(b=.2);50<a&&(b=.4);100<a&&(b=.6);a=this.state.selectedNode;for(var c=this.state.expeditionNode,e=[],d=0;d<7*(1+b);d++){for(var g=[],f=0;f<7*(1+b);f++)g.push($r(WMapTile,{x:d,
y:f,data:this.state.dataset[d+"_"+f],onClick:this.onClick,onFocus:this.onFocus,onBlur:this.onBlur,scale:b,isSelected:a&&a.x==d&&a.y==f,isActive:c&&c.x==d&&c.y==f}));g=$r("div",{className:"map-row"},g);e.push(g)}b=null;a&&(b=a.x,c=a.y,d=this.getTileData(b,c),g=game.village.map.toLevel(b,c),f=d.cp/g*100,b=$r("div",null,["["+b+","+c+"]",$r("div",null,"lv."+d.level+" ["+d.cp.toFixed()+"/"+g.toFixed()+"cp]("+f.toFixed()+"%)"),$r("div",null,"Exp. cost:"+this.getExplorationPrice(b,c).toFixed(2)+" cp/sec"),
$r("div",{className:"btn nosel modern"},$r("div",{className:"btnContent",onClick:this.startExpedition},"Explore"))]));return $r("div",{className:"map-container"},[$r("div",{className:"map-viewport"},e),$r("div",{className:"map-dashboard"},$r("div",null,"Map region:"),a?b:"N/A")])},onClick:function(a,b,c){a={x:b,y:c};this.setState({selectedNode:a});game.village.map.selectedNode=a},onFocus:function(a,b){this.setState({focusedNode:{x:a,y:b}})},onBlur:function(a,b){var c=this.state.focusedNode;c&&c.x==
a&&c.y==b&&this.setState({focusedNode:null})},componentDidMount:function(){this._handler=dojo.subscribe("ui/update",function(a){this.update()}.bind(this))},componentWillUnmount:function(){this._handler&&dojo.unsubscribe(this._handler)},update:function(){this.setState({dataset:this.state.dataset})},startExpedition:function(){var a=this.state.selectedNode;a&&(a={x:a.x,y:a.y},this.setState({expeditionNode:a}),game.village.map.expeditionNode=a)},getTileData:function(a,b){var c=this.state.dataset;a=a+
"_"+b;b=c[a];b||(b={level:0,cp:0},c[a]=b);return b},getExplorationPrice:function(a,b){a=this.getTileData(a,b);return 1*(1+game.village.map.getExploreRatio())*Math.pow(1.01,a.level)}});
WMapSection=React.createClass({getDefaultProperties:function(){return{map:game.village.map}},getInitialState:function(){return{map:this.props.map}},render:function(){if(!this.state.map)return null;var a=this.state.map,b=a.villageData;return $r("div",null,[$r("div",null,"Explored: "+a.exploredLevel+"% (Price reduction: "+(100*a.getPriceReduction()).toFixed(3)+"%)"),$r("div",null,"Exploration bonus: "+(10*a.getExploreRatio()).toFixed()+"%"),$r("a",{className:"link",href:"#",onClick:this.resetMap},"Reset map"),
$r(WMapViewport,{dataset:b,exploredLevel:a.exploredLevel})])},componentDidMount:function(){var a=this;dojo.subscribe("ui/update",function(b){a.setState({map:b.village.map})})},resetMap:function(){game.village.map.resetMap();game.render()}});
